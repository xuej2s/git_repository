<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lpy.dao.BeanTypeConfigDao">
  <resultMap id="BaseResultMap" type="com.lpy.entity.BeanTypeConfig">
    <id column="bean_name" jdbcType="VARCHAR" property="beanName" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
  </resultMap>
  
  <resultMap id="SelectAllMap" type="com.lpy.entity.BeanTypeConfig">
    <result column="bean_name" jdbcType="VARCHAR" property="beanName" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <!-- 
    <association property="beanMethodConfig" javaType="com.lpy.entity.BeanMethodConfig" >
    	<id property="serviceId" column="service_id" jdbcType="VARCHAR"/>
    	<result property="methodName" column="method_name" jdbcType="VARCHAR"/>
    </association>
     -->
    <collection property="beanMethodConfigs" ofType="com.lpy.entity.BeanMethodConfig">
       <id property="serviceId" column="service_id"/>
       <result property="methodName" column="method_name"/>
    </collection>
  </resultMap>
  
  <sql id="Base_Column_List">
    bean_name, type_name
  </sql>
  
  <select id="selectAllConfig" parameterType="com.lpy.entity.BeanMethodConfig" resultMap="SelectAllMap">
  	select *
  	from
  		bean_type a,
  		bean_method b
  	<where>
  	
  		a.bean_name = b.bean_name
  		<if test="beanName != null">
  			and a.bean_name = #{beanName}
  		</if>
  		<if test="methodName != null">
  			and b.method_name = #{methodName}
  		</if>
  		<if test="serviceId != null">
  			and b.service_id = #{serviceId}
  		</if>
  		 
  	</where>
  </select>
  
  <select id="getAllConfig" parameterType="java.util.Map" resultMap="SelectAllMap">
  	select a.bean_name,a.type_name,b.service_id,b.method_name
  	from
  		bean_type a,
  		bean_method b
  	<where>
  	
  		a.bean_name = b.bean_name
  		<if test="beanMethodConfig.beanName != null and beanMethodConfig.beanName != '' ">
  			and b.bean_name = #{beanMethodConfig.beanName}
  		</if>
  		<if test="beanTypeConfig.beanName != null and beanTypeConfig.beanName != ''">
  			and a.bean_name = #{beanTypeConfig.beanName}
  		</if>
  		<if test="beanTypeConfig.typeName != null and beanTypeConfig.typeName != ''">
  			and a.type_name = #{beanTypeConfig.typeName}
  		</if>
  		<if test="beanMethodConfig.methodName != null and beanMethodConfig.methodName != ''">
  			and b.method_name = #{beanMethodConfig.methodName}
  		</if>
  		<if test="beanMethodConfig.serviceId != null and beanMethodConfig.serviceId != ''">
  			and b.service_id = #{beanMethodConfig.serviceId}
  		</if>
  		 
  	</where>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bean_type
    where bean_name = #{beanName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from bean_type
    where bean_name = #{beanName,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lpy.entity.BeanTypeConfig">
    insert into bean_type (bean_name, type_name)
    values (#{beanName,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.lpy.entity.BeanTypeConfig">
    insert into bean_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="beanName != null">
        bean_name,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="beanName != null">
        #{beanName,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lpy.entity.BeanTypeConfig">
    update bean_type
    <set>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
    </set>
    where bean_name = #{beanName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lpy.entity.BeanTypeConfig">
    update bean_type
    set type_name = #{typeName,jdbcType=VARCHAR}
    where bean_name = #{beanName,jdbcType=VARCHAR}
  </update>
</mapper>